{"version":3,"sources":["controller/axios.js","components/row/Row.js","components/request/requests.js","components/banner/Banner.js","images/logo.jpg","images/logo.png","components/navbar/Nav.js","view/App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchNeActionMovies","fetchComedyMovies","fetchHorrorMovies","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","logo","logo2","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ebf77de.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\"\r\n});\r\n\r\nexport default instance;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../../controller/axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      // console.log(request.data.results);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n  const opts = {\r\n    height:\"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl){\r\n      setTrailerUrl('');\r\n    } else{\r\n      movieTrailer(movie?.name || \"\")\r\n      .then((url) => {\r\n        const urlParams = new  URLSearchParams(new URL(url).search);\r\n        setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  // console.log(movies);\r\n  // console.table(movies);\r\n  return (\r\n    <div className=\"row\">\r\n      {/* title */}\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n            src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n            // onClick= {console.log('Clicked')}\r\n          />\r\n        ))}\r\n      </div>\r\n      {/* <div className=\"movieName\">{movies.map((movie) =>(\r\n        <h2>{movie.original_title}</h2>\r\n\r\n      ))}</div> */}\r\n\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts}/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY= \"639a25c6016a599d45d3203b608da9cd\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchNeActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  // fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  // fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../../controller/axios\";\r\nimport requests from \"../request/requests\";\r\nimport \"./Banner.css\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  console.log(movie);\r\n\r\nfunction truncate(str, n){\r\n    return str?.length > n ? str.substr(0, n -1) + \"...\" : str;\r\n}\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"${base_url}${movie?.poster_path}\"\r\n\r\n            )`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">{movie?.title || movie?.name || movie?.original_name}</h1>\r\n        {/* <div className=\"banner__button\">\r\n            <button className=\"banner__button\">Play</button>\r\n            <button className=\"banner__button\">My List</button>\r\n        </div> */}\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n        <h1 className=\"banner__description\">{truncate(movie?.overview, 150)}</h1>\r\n      </div>\r\n      <div className=\"banner__fadeBottom\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","export default __webpack_public_path__ + \"static/media/logo.3354c3ba.jpg\";","export default __webpack_public_path__ + \"static/media/logo.2cdc15dd.png\";","import React, { useState, useEffect } from 'react'\r\nimport logo from './../../images/logo.jpg';\r\nimport logo2 from './../../images/logo.png';\r\nimport './Nav.css';\r\n\r\nfunction Nav() {\r\n    const [show, handleShow] = useState(false);\r\n\r\nuseEffect(() => {\r\n    window.addEventListener(\r\n        \"scroll\", ()=>{\r\n            if(window.scrollY > 150){\r\n                handleShow(true);\r\n            }else handleShow(false);\r\n        }\r\n    );\r\n\r\n    return () => {\r\n        window.removeEventListener(\"scroll\")\r\n    };\r\n}, []);\r\n\r\n\r\n    return (\r\n      <div className={`nav ${show && \"nav__black\"}`}>\r\n        <img\r\n          className=\"nav__logo\"\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n          alt=\"Netflix Logo\"\r\n        />\r\n        <img className=\"nav__avatar\" src={logo} alt=\"Netflix avatar\" />\r\n        <img className=\"nav__avatar__center\" src={logo2} alt=\"Netflix avatar\" />\r\n        {/* <div className=\"nav__fade\"></div> */}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Nav\r\n","// import logo from './logo.svg';\nimport \"./App.css\";\nimport Row from \"../components/row/Row\";\nimport requests from \"../components/request/requests\";\nimport Banner from \"../components/banner/Banner\";\nimport Nav from \"../components/navbar/Nav\";\n// import Counter from './Counter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <h1>Shebl Movies Database</h1> */}\n      <Nav/>\n      <Banner />\n      <Row title=\"Trending\" fetchUrl={requests.fetchTrending} isLargeRow />\n      <Row title=\" ORIGINALS \" fetchUrl={requests.fetchNetflixOriginals} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action\" fetchUrl={requests.fetchNeActionMovies} />\n      <Row title=\"Comedy\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror\" fetchUrl={requests.fetchHorrorMovies} />\n      {/* <Counter/> */}\n      {/* <Row title=\"Romance\" fetchUrl={requests.fetchRomanceMovies} isLargeRow /> */}\n      {/* <Row\n        title=\"Documentaries\"\n        fetchUrl={requests.fetchDocumentaries}\n        isLargeRow\n      /> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './view/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}